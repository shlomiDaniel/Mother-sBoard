{"version":3,"file":"angular-material-extensions.js","sources":["../../../projects/extensions/src/table/directives/custom-header.directive.ts","../../../projects/extensions/src/table/selection-column/selection-column.component.ts","../../../projects/extensions/src/table/table.module.ts","../../../projects/extensions/src/table/index.ts","../../../projects/extensions/src/public-api.ts","../../../projects/extensions/src/angular-material-extensions.ts"],"sourcesContent":["import {\n  AfterViewInit,\n  Directive,\n  ElementRef\n} from '@angular/core';\nimport {\n  DragDrop,\n  DragRef,\n  DropListRef,\n  moveItemInArray\n} from '@angular/cdk/drag-drop';\nimport {\n  MatHeaderCell,\n  MatTable\n} from '@angular/material/table';\n\n@Directive({\n  selector: '[matCustomHeader]'\n})\nexport class CustomHeaderDirective implements AfterViewInit\n{\n\n  private dropListRef: DropListRef;\n  private columns: Array<string> = [];\n\n  constructor(private table: MatTable<any>, private headerRow: ElementRef, private dndService: DragDrop)\n  {}\n\n  public ngAfterViewInit(): void\n  {\n    this.dropListRef = this.createDropList(this.headerRow, this.createDrags(this.getHeaderCells(this.headerRow.nativeElement)));\n    this.columns = this.table._contentHeaderRowDefs.first.columns as Array<string>;\n    console.log(this.columns);\n  }\n\n  public drop(event: any): void\n  {\n    moveItemInArray(this.columns, event.previousIndex, event.currentIndex);\n  }\n\n  private getHeaderCells(rowElem: Element): Array<MatHeaderCell>\n  {\n    return Array.from(rowElem.children);\n  }\n\n  private createDrags(cellRefs: Array<MatHeaderCell>): Array<DragRef>\n  {\n    return cellRefs.map((cellRef: MatHeaderCell) =>\n    {\n      const drag: DragRef = this.dndService.createDrag(cellRef as ElementRef);\n      drag.lockAxis = 'x';\n      return drag;\n    });\n  }\n\n  private createDropList(headerRowDef: ElementRef, drags: Array<DragRef>): DropListRef\n  {\n    const dropListRef: DropListRef = this.dndService.createDropList(headerRowDef);\n    dropListRef.withItems(drags);\n    dropListRef.withOrientation('horizontal');\n    dropListRef.dropped.subscribe((event: {\n      item: DragRef;\n      currentIndex: number;\n      previousIndex: number;\n      container: DropListRef<any>;\n      previousContainer: DropListRef<any>;\n      isPointerOverContainer: boolean;\n    }) => this.drop(event));\n    return dropListRef;\n  }\n\n}\n","import {\n  Component,\n  Input,\n  OnDestroy,\n  OnInit,\n  ViewChild\n} from '@angular/core';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport {\n  MatColumnDef,\n  MatCellDef,\n  MatHeaderCellDef,\n  MatTable,\n  MatTableDataSource\n} from '@angular/material/table';\n\n@Component({\n  selector:    'mat-selection-column',\n  templateUrl: './selection-column.component.html',\n  styleUrls:   ['./selection-column.component.scss']\n})\nexport class MatSelectionColumnComponent<T> implements OnInit, OnDestroy {\n\n  /** @description Name of the column */\n  @Input() name: string;\n\n  /** @description Reference to the selection model */\n  @Input() selection: SelectionModel<T>;\n\n  @ViewChild(MatColumnDef, {static: true}) columnDef: MatColumnDef;\n  @ViewChild(MatCellDef, {static: true}) cell: MatCellDef;\n  @ViewChild(MatHeaderCellDef, {static: true}) headerCell: MatHeaderCellDef;\n\n  constructor(private table: MatTable<T>) { }\n\n  public ngOnInit(): void {\n    this.columnDef.name = this.name || 'select';\n    this.columnDef.cell = this.cell;\n    this.columnDef.headerCell = this.headerCell;\n    this.table.addColumnDef(this.columnDef);\n  }\n\n  public ngOnDestroy(): void {\n    this.table.removeColumnDef(this.columnDef);\n  }\n\n  private get data(): T[] {\n    if (!this.table)\n    {\n      return [];\n    }\n    if (this.table.dataSource instanceof MatTableDataSource)\n    {\n      return this.table.dataSource.data || [];\n    }\n    // TODO: What about Observables?\n\n    return this.table.dataSource as T[] || [];\n  }\n\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection?.selected.length || 0;\n    const numRows = this.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    if (!this.selection)\n    {\n      return;\n    }\n    this.isAllSelected() ?\n      this.selection.clear() :\n      this.selection.select(...this.data);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { CustomHeaderDirective } from './directives/custom-header.directive';\nimport { MatSelectionColumnComponent } from './selection-column/selection-column.component';\n\n\n/** @description Exports all the extensions for material's table component. */\n@NgModule({\n  declarations: [\n    CustomHeaderDirective,\n    MatSelectionColumnComponent\n  ],\n  imports: [\n    CommonModule,\n    MatTableModule,\n    MatCheckboxModule\n  ],\n  exports: [\n    CustomHeaderDirective,\n    MatSelectionColumnComponent\n  ]\n})\nexport class MatTableExtensionsModule { }\n","// module\nexport { MatTableExtensionsModule } from './table.module';\n\n// components\nexport { MatSelectionColumnComponent } from './selection-column/selection-column.component';\n\n// directives\nexport { CustomHeaderDirective } from './directives/custom-header.directive';\n","/*\n * Public API Surface of extensions\n */\nexport * from './table';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}