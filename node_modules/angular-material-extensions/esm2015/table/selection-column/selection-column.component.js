import { Component, Input, ViewChild } from '@angular/core';
import { MatColumnDef, MatCellDef, MatHeaderCellDef, MatTable, MatTableDataSource } from '@angular/material/table';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/material/table';
import * as ɵngcc2 from '@angular/material/checkbox';

function MatSelectionColumnComponent_th_1_Template(rf, ctx) { if (rf & 1) {
    const _r3 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "th", 3);
    ɵngcc0.ɵɵelementStart(1, "mat-checkbox", 4);
    ɵngcc0.ɵɵlistener("change", function MatSelectionColumnComponent_th_1_Template_mat_checkbox_change_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r3); const ctx_r2 = ɵngcc0.ɵɵnextContext(); return $event ? ctx_r2.masterToggle() : null; });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("checked", (ctx_r0.selection == null ? null : ctx_r0.selection.hasValue()) && ctx_r0.isAllSelected())("indeterminate", (ctx_r0.selection == null ? null : ctx_r0.selection.hasValue()) && !ctx_r0.isAllSelected());
} }
function MatSelectionColumnComponent_td_2_Template(rf, ctx) { if (rf & 1) {
    const _r6 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "td", 5);
    ɵngcc0.ɵɵelementStart(1, "mat-checkbox", 6);
    ɵngcc0.ɵɵlistener("click", function MatSelectionColumnComponent_td_2_Template_mat_checkbox_click_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r6); return $event.stopPropagation(); })("change", function MatSelectionColumnComponent_td_2_Template_mat_checkbox_change_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r6); const row_r4 = ctx.$implicit; const ctx_r7 = ɵngcc0.ɵɵnextContext(); return $event ? ctx_r7.selection == null ? null : ctx_r7.selection.toggle(row_r4) : null; });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const row_r4 = ctx.$implicit;
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("checked", ctx_r1.selection == null ? null : ctx_r1.selection.isSelected(row_r4));
} }
export class MatSelectionColumnComponent {
    constructor(table) {
        this.table = table;
    }
    ngOnInit() {
        this.columnDef.name = this.name || 'select';
        this.columnDef.cell = this.cell;
        this.columnDef.headerCell = this.headerCell;
        this.table.addColumnDef(this.columnDef);
    }
    ngOnDestroy() {
        this.table.removeColumnDef(this.columnDef);
    }
    get data() {
        if (!this.table) {
            return [];
        }
        if (this.table.dataSource instanceof MatTableDataSource) {
            return this.table.dataSource.data || [];
        }
        // TODO: What about Observables?
        return this.table.dataSource || [];
    }
    /** Whether the number of selected elements matches the total number of rows. */
    isAllSelected() {
        var _a;
        const numSelected = ((_a = this.selection) === null || _a === void 0 ? void 0 : _a.selected.length) || 0;
        const numRows = this.data.length;
        return numSelected === numRows;
    }
    /** Selects all rows if they are not all selected; otherwise clear selection. */
    masterToggle() {
        if (!this.selection) {
            return;
        }
        this.isAllSelected() ?
            this.selection.clear() :
            this.selection.select(...this.data);
    }
}
MatSelectionColumnComponent.ɵfac = function MatSelectionColumnComponent_Factory(t) { return new (t || MatSelectionColumnComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.MatTable)); };
MatSelectionColumnComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSelectionColumnComponent, selectors: [["mat-selection-column"]], viewQuery: function MatSelectionColumnComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵstaticViewQuery(MatColumnDef, true);
        ɵngcc0.ɵɵstaticViewQuery(MatCellDef, true);
        ɵngcc0.ɵɵstaticViewQuery(MatHeaderCellDef, true);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.columnDef = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.cell = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.headerCell = _t.first);
    } }, inputs: { name: "name", selection: "selection" }, decls: 3, vars: 0, consts: [["matColumnDef", ""], ["mat-header-cell", "", 4, "matHeaderCellDef"], ["mat-cell", "", 4, "matCellDef"], ["mat-header-cell", ""], [3, "checked", "indeterminate", "change"], ["mat-cell", ""], [3, "checked", "click", "change"]], template: function MatSelectionColumnComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementContainerStart(0, 0);
        ɵngcc0.ɵɵtemplate(1, MatSelectionColumnComponent_th_1_Template, 2, 2, "th", 1);
        ɵngcc0.ɵɵtemplate(2, MatSelectionColumnComponent_td_2_Template, 2, 1, "td", 2);
        ɵngcc0.ɵɵelementContainerEnd();
    } }, directives: [ɵngcc1.MatColumnDef, ɵngcc1.MatHeaderCellDef, ɵngcc1.MatCellDef, ɵngcc1.MatHeaderCell, ɵngcc2.MatCheckbox, ɵngcc1.MatCell], styles: [".mat-cell[_ngcontent-%COMP%], .mat-header-cell[_ngcontent-%COMP%]{padding-left:24px;padding-right:24px}"] });
MatSelectionColumnComponent.ctorParameters = () => [
    { type: MatTable }
];
MatSelectionColumnComponent.propDecorators = {
    name: [{ type: Input }],
    selection: [{ type: Input }],
    columnDef: [{ type: ViewChild, args: [MatColumnDef, { static: true },] }],
    cell: [{ type: ViewChild, args: [MatCellDef, { static: true },] }],
    headerCell: [{ type: ViewChild, args: [MatHeaderCellDef, { static: true },] }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSelectionColumnComponent, [{
        type: Component,
        args: [{
                selector: 'mat-selection-column',
                template: "<ng-container matColumnDef>\n  <th mat-header-cell *matHeaderCellDef>\n    <mat-checkbox (change)=\"$event ? masterToggle() : null\"\n                  [checked]=\"selection?.hasValue() && isAllSelected()\"\n                  [indeterminate]=\"selection?.hasValue() && !isAllSelected()\">\n    </mat-checkbox>\n  </th>\n  <td mat-cell *matCellDef=\"let row\">\n    <mat-checkbox (click)=\"$event.stopPropagation()\"\n                  (change)=\"$event ? selection?.toggle(row) : null\"\n                  [checked]=\"selection?.isSelected(row)\">\n    </mat-checkbox>\n  </td>\n</ng-container>\n",
                styles: [".mat-cell,.mat-header-cell{padding-left:24px;padding-right:24px}"]
            }]
    }], function () { return [{ type: ɵngcc1.MatTable }]; }, { name: [{
            type: Input
        }], selection: [{
            type: Input
        }], columnDef: [{
            type: ViewChild,
            args: [MatColumnDef, { static: true }]
        }], cell: [{
            type: ViewChild,
            args: [MatCellDef, { static: true }]
        }], headerCell: [{
            type: ViewChild,
            args: [MatHeaderCellDef, { static: true }]
        }] }); })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VsZWN0aW9uLWNvbHVtbi5jb21wb25lbnQuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2V4dGVuc2lvbnMvc3JjL3RhYmxlL3NlbGVjdGlvbi1jb2x1bW4vc2VsZWN0aW9uLWNvbHVtbi5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUNMLFNBQVMsRUFDVCxLQUFLLEVBR0wsU0FBUyxFQUNWLE1BQU0sZUFBZSxDQUFDO0FBRXZCLE9BQU8sRUFDTCxZQUFZLEVBQ1osVUFBVSxFQUNWLGdCQUFnQixFQUNoQixRQUFRLEVBQ1Isa0JBQWtCLEVBQ25CLE1BQU0seUJBQXlCLENBQUM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQU9qQyxNQUFNLE9BQU8sMkJBQTJCO0FBQUcsSUFZekMsWUFBb0IsS0FBa0I7QUFBSSxRQUF0QixVQUFLLEdBQUwsS0FBSyxDQUFhO0FBQUMsSUFBRyxDQUFDO0FBQzdDLElBQ1MsUUFBUTtBQUFLLFFBQ2xCLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQyxJQUFJLElBQUksUUFBUSxDQUFDO0FBQ2hELFFBQUksSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQztBQUNwQyxRQUFJLElBQUksQ0FBQyxTQUFTLENBQUMsVUFBVSxHQUFHLElBQUksQ0FBQyxVQUFVLENBQUM7QUFDaEQsUUFBSSxJQUFJLENBQUMsS0FBSyxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUM7QUFDNUMsSUFBRSxDQUFDO0FBQ0gsSUFDUyxXQUFXO0FBQUssUUFDckIsSUFBSSxDQUFDLEtBQUssQ0FBQyxlQUFlLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDO0FBQy9DLElBQUUsQ0FBQztBQUNILElBQ0UsSUFBWSxJQUFJO0FBQUssUUFDbkIsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLEVBQ2Y7QUFDSixZQUFNLE9BQU8sRUFBRSxDQUFDO0FBQ2hCLFNBQUs7QUFDTCxRQUFJLElBQUksSUFBSSxDQUFDLEtBQUssQ0FBQyxVQUFVLFlBQVksa0JBQWtCLEVBQ3ZEO0FBQ0osWUFBTSxPQUFPLElBQUksQ0FBQyxLQUFLLENBQUMsVUFBVSxDQUFDLElBQUksSUFBSSxFQUFFLENBQUM7QUFDOUMsU0FBSztBQUNMLFFBQUksZ0NBQWdDO0FBQ3BDLFFBQ0ksT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDLFVBQWlCLElBQUksRUFBRSxDQUFDO0FBQzlDLElBQUUsQ0FBQztBQUNILElBRUUsZ0ZBQWdGO0FBQ2xGLElBQUUsYUFBYTtBQUNmO0FBQWdCLFFBQVosTUFBTSxXQUFXLEdBQUcsT0FBQSxJQUFJLENBQUMsU0FBUywwQ0FBRSxRQUFRLENBQUMsTUFBTSxLQUFJLENBQUMsQ0FBQztBQUM3RCxRQUFJLE1BQU0sT0FBTyxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDO0FBQ3JDLFFBQUksT0FBTyxXQUFXLEtBQUssT0FBTyxDQUFDO0FBQ25DLElBQUUsQ0FBQztBQUNILElBQ0UsZ0ZBQWdGO0FBQ2xGLElBQUUsWUFBWTtBQUNkLFFBQUksSUFBSSxDQUFDLElBQUksQ0FBQyxTQUFTLEVBQ25CO0FBQ0osWUFBTSxPQUFPO0FBQ2IsU0FBSztBQUNMLFFBQUksSUFBSSxDQUFDLGFBQWEsRUFBRSxDQUFDLENBQUM7QUFDMUIsWUFBTSxJQUFJLENBQUMsU0FBUyxDQUFDLEtBQUssRUFBRSxDQUFDLENBQUM7QUFDOUIsWUFBTSxJQUFJLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztBQUMxQyxJQUFFLENBQUM7QUFDSDt1REE5REMsU0FBUyxTQUFDLGtCQUNULFFBQVEsRUFBSyxzQkFBc0Isa0JBQ25DOzs7Ozs7OztvRUFBZ0Q7O0lBRWpEOzs7Ozt5UUFDSTtBQUFDO0FBQXFELFlBVHpELFFBQVE7QUFDVDtBQUFHO0FBQzBCLG1CQVUzQixLQUFLO0FBQUssd0JBR1YsS0FBSztBQUFLLHdCQUVWLFNBQVMsU0FBQyxZQUFZLEVBQUUsRUFBQyxNQUFNLEVBQUUsSUFBSSxFQUFDO0FBQU8sbUJBQzdDLFNBQVMsU0FBQyxVQUFVLEVBQUUsRUFBQyxNQUFNLEVBQUUsSUFBSSxFQUFDO0FBQU8seUJBQzNDLFNBQVMsU0FBQyxnQkFBZ0IsRUFBRSxFQUFDLE1BQU0sRUFBRSxJQUFJLEVBQUM7QUFBTTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQS9CQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFHQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFFQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQU9BLEFBQUEsQUFBQSxBQUFBLEFBWUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFFQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFFQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUVBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFDQSxBQUFBLEFBRUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBR0EsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFFQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQ0EsQUFBQSxBQUNBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUE3REEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBRUEsQUFSQSxBQUFBLEFBWUEsQUFBQSxBQUdBLEFBQUEsQUFFQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBDb21wb25lbnQsXG4gIElucHV0LFxuICBPbkRlc3Ryb3ksXG4gIE9uSW5pdCxcbiAgVmlld0NoaWxkXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgU2VsZWN0aW9uTW9kZWwgfSBmcm9tICdAYW5ndWxhci9jZGsvY29sbGVjdGlvbnMnO1xuaW1wb3J0IHtcbiAgTWF0Q29sdW1uRGVmLFxuICBNYXRDZWxsRGVmLFxuICBNYXRIZWFkZXJDZWxsRGVmLFxuICBNYXRUYWJsZSxcbiAgTWF0VGFibGVEYXRhU291cmNlXG59IGZyb20gJ0Bhbmd1bGFyL21hdGVyaWFsL3RhYmxlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAgICAnbWF0LXNlbGVjdGlvbi1jb2x1bW4nLFxuICB0ZW1wbGF0ZVVybDogJy4vc2VsZWN0aW9uLWNvbHVtbi5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogICBbJy4vc2VsZWN0aW9uLWNvbHVtbi5jb21wb25lbnQuc2NzcyddXG59KVxuZXhwb3J0IGNsYXNzIE1hdFNlbGVjdGlvbkNvbHVtbkNvbXBvbmVudDxUPiBpbXBsZW1lbnRzIE9uSW5pdCwgT25EZXN0cm95IHtcblxuICAvKiogQGRlc2NyaXB0aW9uIE5hbWUgb2YgdGhlIGNvbHVtbiAqL1xuICBASW5wdXQoKSBuYW1lOiBzdHJpbmc7XG5cbiAgLyoqIEBkZXNjcmlwdGlvbiBSZWZlcmVuY2UgdG8gdGhlIHNlbGVjdGlvbiBtb2RlbCAqL1xuICBASW5wdXQoKSBzZWxlY3Rpb246IFNlbGVjdGlvbk1vZGVsPFQ+O1xuXG4gIEBWaWV3Q2hpbGQoTWF0Q29sdW1uRGVmLCB7c3RhdGljOiB0cnVlfSkgY29sdW1uRGVmOiBNYXRDb2x1bW5EZWY7XG4gIEBWaWV3Q2hpbGQoTWF0Q2VsbERlZiwge3N0YXRpYzogdHJ1ZX0pIGNlbGw6IE1hdENlbGxEZWY7XG4gIEBWaWV3Q2hpbGQoTWF0SGVhZGVyQ2VsbERlZiwge3N0YXRpYzogdHJ1ZX0pIGhlYWRlckNlbGw6IE1hdEhlYWRlckNlbGxEZWY7XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSB0YWJsZTogTWF0VGFibGU8VD4pIHsgfVxuXG4gIHB1YmxpYyBuZ09uSW5pdCgpOiB2b2lkIHtcbiAgICB0aGlzLmNvbHVtbkRlZi5uYW1lID0gdGhpcy5uYW1lIHx8ICdzZWxlY3QnO1xuICAgIHRoaXMuY29sdW1uRGVmLmNlbGwgPSB0aGlzLmNlbGw7XG4gICAgdGhpcy5jb2x1bW5EZWYuaGVhZGVyQ2VsbCA9IHRoaXMuaGVhZGVyQ2VsbDtcbiAgICB0aGlzLnRhYmxlLmFkZENvbHVtbkRlZih0aGlzLmNvbHVtbkRlZik7XG4gIH1cblxuICBwdWJsaWMgbmdPbkRlc3Ryb3koKTogdm9pZCB7XG4gICAgdGhpcy50YWJsZS5yZW1vdmVDb2x1bW5EZWYodGhpcy5jb2x1bW5EZWYpO1xuICB9XG5cbiAgcHJpdmF0ZSBnZXQgZGF0YSgpOiBUW10ge1xuICAgIGlmICghdGhpcy50YWJsZSlcbiAgICB7XG4gICAgICByZXR1cm4gW107XG4gICAgfVxuICAgIGlmICh0aGlzLnRhYmxlLmRhdGFTb3VyY2UgaW5zdGFuY2VvZiBNYXRUYWJsZURhdGFTb3VyY2UpXG4gICAge1xuICAgICAgcmV0dXJuIHRoaXMudGFibGUuZGF0YVNvdXJjZS5kYXRhIHx8IFtdO1xuICAgIH1cbiAgICAvLyBUT0RPOiBXaGF0IGFib3V0IE9ic2VydmFibGVzP1xuXG4gICAgcmV0dXJuIHRoaXMudGFibGUuZGF0YVNvdXJjZSBhcyBUW10gfHwgW107XG4gIH1cblxuXG4gIC8qKiBXaGV0aGVyIHRoZSBudW1iZXIgb2Ygc2VsZWN0ZWQgZWxlbWVudHMgbWF0Y2hlcyB0aGUgdG90YWwgbnVtYmVyIG9mIHJvd3MuICovXG4gIGlzQWxsU2VsZWN0ZWQoKSB7XG4gICAgY29uc3QgbnVtU2VsZWN0ZWQgPSB0aGlzLnNlbGVjdGlvbj8uc2VsZWN0ZWQubGVuZ3RoIHx8IDA7XG4gICAgY29uc3QgbnVtUm93cyA9IHRoaXMuZGF0YS5sZW5ndGg7XG4gICAgcmV0dXJuIG51bVNlbGVjdGVkID09PSBudW1Sb3dzO1xuICB9XG5cbiAgLyoqIFNlbGVjdHMgYWxsIHJvd3MgaWYgdGhleSBhcmUgbm90IGFsbCBzZWxlY3RlZDsgb3RoZXJ3aXNlIGNsZWFyIHNlbGVjdGlvbi4gKi9cbiAgbWFzdGVyVG9nZ2xlKCkge1xuICAgIGlmICghdGhpcy5zZWxlY3Rpb24pXG4gICAge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICB0aGlzLmlzQWxsU2VsZWN0ZWQoKSA/XG4gICAgICB0aGlzLnNlbGVjdGlvbi5jbGVhcigpIDpcbiAgICAgIHRoaXMuc2VsZWN0aW9uLnNlbGVjdCguLi50aGlzLmRhdGEpO1xuICB9XG5cbn1cbiJdfQ==