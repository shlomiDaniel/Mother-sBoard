import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { MatTableModule } from '@angular/material/table';
import { MatCheckboxModule } from '@angular/material/checkbox';
import { CustomHeaderDirective } from './directives/custom-header.directive';
import { MatSelectionColumnComponent } from './selection-column/selection-column.component';
/** @description Exports all the extensions for material's table component. */
import * as ɵngcc0 from '@angular/core';
export class MatTableExtensionsModule {
}
MatTableExtensionsModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatTableExtensionsModule });
MatTableExtensionsModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatTableExtensionsModule_Factory(t) { return new (t || MatTableExtensionsModule)(); }, imports: [[
            CommonModule,
            MatTableModule,
            MatCheckboxModule
        ]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatTableExtensionsModule, { declarations: function () { return [CustomHeaderDirective,
        MatSelectionColumnComponent]; }, imports: function () { return [CommonModule,
        MatTableModule,
        MatCheckboxModule]; }, exports: function () { return [CustomHeaderDirective,
        MatSelectionColumnComponent]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTableExtensionsModule, [{
        type: NgModule,
        args: [{
                declarations: [
                    CustomHeaderDirective,
                    MatSelectionColumnComponent
                ],
                imports: [
                    CommonModule,
                    MatTableModule,
                    MatCheckboxModule
                ],
                exports: [
                    CustomHeaderDirective,
                    MatSelectionColumnComponent
                ]
            }]
    }], null, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFibGUubW9kdWxlLmpzIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9leHRlbnNpb25zL3NyYy90YWJsZS90YWJsZS5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN6QyxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBQ3pELE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBRS9ELE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLHNDQUFzQyxDQUFDO0FBQzdFLE9BQU8sRUFBRSwyQkFBMkIsRUFBRSxNQUFNLCtDQUErQyxDQUFDO0FBRzVGLDhFQUE4RTs7QUFnQjlFLE1BQU0sT0FBTyx3QkFBd0I7QUFBRztvREFmdkMsUUFBUSxTQUFDLGtCQUNSO01BQVksRUFBRSxzQkFDWixxQkFBcUIsc0JBQ3JCLDJCQUEyQixrQkFDNUIsa0JBQ0QsT0FBTyxFQUFFLHNCQUNQO0lBQVk7QUFDWixjQUFjO1FBQ2QsaUJBQWlCO2FBQ2xCO2dCQUNELE9BQU8sRUFBRSxzQkFDUCxxQkFBcUIsc0JBQ3JCLDJCQUEyQixrQkFDNUIsY0FDRjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzswQkFDSTtBQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQgeyBNYXRUYWJsZU1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL21hdGVyaWFsL3RhYmxlJztcbmltcG9ydCB7IE1hdENoZWNrYm94TW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvbWF0ZXJpYWwvY2hlY2tib3gnO1xuXG5pbXBvcnQgeyBDdXN0b21IZWFkZXJEaXJlY3RpdmUgfSBmcm9tICcuL2RpcmVjdGl2ZXMvY3VzdG9tLWhlYWRlci5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgTWF0U2VsZWN0aW9uQ29sdW1uQ29tcG9uZW50IH0gZnJvbSAnLi9zZWxlY3Rpb24tY29sdW1uL3NlbGVjdGlvbi1jb2x1bW4uY29tcG9uZW50JztcblxuXG4vKiogQGRlc2NyaXB0aW9uIEV4cG9ydHMgYWxsIHRoZSBleHRlbnNpb25zIGZvciBtYXRlcmlhbCdzIHRhYmxlIGNvbXBvbmVudC4gKi9cbkBOZ01vZHVsZSh7XG4gIGRlY2xhcmF0aW9uczogW1xuICAgIEN1c3RvbUhlYWRlckRpcmVjdGl2ZSxcbiAgICBNYXRTZWxlY3Rpb25Db2x1bW5Db21wb25lbnRcbiAgXSxcbiAgaW1wb3J0czogW1xuICAgIENvbW1vbk1vZHVsZSxcbiAgICBNYXRUYWJsZU1vZHVsZSxcbiAgICBNYXRDaGVja2JveE1vZHVsZVxuICBdLFxuICBleHBvcnRzOiBbXG4gICAgQ3VzdG9tSGVhZGVyRGlyZWN0aXZlLFxuICAgIE1hdFNlbGVjdGlvbkNvbHVtbkNvbXBvbmVudFxuICBdXG59KVxuZXhwb3J0IGNsYXNzIE1hdFRhYmxlRXh0ZW5zaW9uc01vZHVsZSB7IH1cbiJdfQ==