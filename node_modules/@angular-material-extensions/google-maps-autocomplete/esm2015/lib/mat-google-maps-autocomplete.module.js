import { __decorate } from "tslib";
import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { FlexLayoutModule } from '@angular/flex-layout';
import { FormsModule, ReactiveFormsModule } from '@angular/forms';
import { MatIconModule } from '@angular/material/icon';
import { MatInputModule } from '@angular/material/input';
import { MatGoogleMapsAutocompleteDirective } from './directives/mat-google-maps-autocomplete.directive';
import { MatValidateAddressDirective } from './directives/address-validator/mat-address-validator.directive';
import { MatGoogleMapsAutocompleteComponent } from './component/mat-google-maps-autocomplete.component';
// tslint:disable-next-line:max-line-length
import { MatSearchGoogleMapsAutocompleteComponent } from './component/mat-search-google-maps-autocomplete/mat-search-google-maps-autocomplete.component';
let MatGoogleMapsAutocompleteModule = class MatGoogleMapsAutocompleteModule {
};
MatGoogleMapsAutocompleteModule = __decorate([
    NgModule({
        imports: [
            CommonModule,
            FormsModule,
            ReactiveFormsModule,
            FlexLayoutModule,
            MatInputModule,
            MatIconModule
        ],
        exports: [
            MatGoogleMapsAutocompleteComponent,
            MatGoogleMapsAutocompleteDirective,
            MatValidateAddressDirective,
            MatSearchGoogleMapsAutocompleteComponent
        ],
        declarations: [
            MatGoogleMapsAutocompleteComponent,
            MatGoogleMapsAutocompleteDirective,
            MatValidateAddressDirective,
            MatSearchGoogleMapsAutocompleteComponent
        ]
    })
], MatGoogleMapsAutocompleteModule);
export { MatGoogleMapsAutocompleteModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWF0LWdvb2dsZS1tYXBzLWF1dG9jb21wbGV0ZS5tb2R1bGUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AYW5ndWxhci1tYXRlcmlhbC1leHRlbnNpb25zL2dvb2dsZS1tYXBzLWF1dG9jb21wbGV0ZS8iLCJzb3VyY2VzIjpbImxpYi9tYXQtZ29vZ2xlLW1hcHMtYXV0b2NvbXBsZXRlLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFDLFlBQVksRUFBQyxNQUFNLGlCQUFpQixDQUFDO0FBQzdDLE9BQU8sRUFBQyxRQUFRLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDdkMsT0FBTyxFQUFDLGdCQUFnQixFQUFDLE1BQU0sc0JBQXNCLENBQUM7QUFDdEQsT0FBTyxFQUFDLFdBQVcsRUFBRSxtQkFBbUIsRUFBQyxNQUFNLGdCQUFnQixDQUFDO0FBQ2hFLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUN2RCxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFDekQsT0FBTyxFQUFDLGtDQUFrQyxFQUFDLE1BQU0scURBQXFELENBQUM7QUFDdkcsT0FBTyxFQUFDLDJCQUEyQixFQUFDLE1BQU0sZ0VBQWdFLENBQUM7QUFDM0csT0FBTyxFQUFDLGtDQUFrQyxFQUFDLE1BQU0sb0RBQW9ELENBQUM7QUFDdEcsMkNBQTJDO0FBQzNDLE9BQU8sRUFBQyx3Q0FBd0MsRUFBQyxNQUFNLCtGQUErRixDQUFDO0FBMEJ2SixJQUFhLCtCQUErQixHQUE1QyxNQUFhLCtCQUErQjtDQUMzQyxDQUFBO0FBRFksK0JBQStCO0lBdkIzQyxRQUFRLENBQUM7UUFDUixPQUFPLEVBQ0w7WUFDRSxZQUFZO1lBQ1osV0FBVztZQUNYLG1CQUFtQjtZQUNuQixnQkFBZ0I7WUFDaEIsY0FBYztZQUNkLGFBQWE7U0FDZDtRQUNILE9BQU8sRUFBRTtZQUNQLGtDQUFrQztZQUNsQyxrQ0FBa0M7WUFDbEMsMkJBQTJCO1lBQzNCLHdDQUF3QztTQUN6QztRQUNELFlBQVksRUFBRTtZQUNaLGtDQUFrQztZQUNsQyxrQ0FBa0M7WUFDbEMsMkJBQTJCO1lBQzNCLHdDQUF3QztTQUN6QztLQUNGLENBQUM7R0FDVywrQkFBK0IsQ0FDM0M7U0FEWSwrQkFBK0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0NvbW1vbk1vZHVsZX0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7TmdNb2R1bGV9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtGbGV4TGF5b3V0TW9kdWxlfSBmcm9tICdAYW5ndWxhci9mbGV4LWxheW91dCc7XG5pbXBvcnQge0Zvcm1zTW9kdWxlLCBSZWFjdGl2ZUZvcm1zTW9kdWxlfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5pbXBvcnQgeyBNYXRJY29uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvbWF0ZXJpYWwvaWNvbic7XG5pbXBvcnQgeyBNYXRJbnB1dE1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL21hdGVyaWFsL2lucHV0JztcbmltcG9ydCB7TWF0R29vZ2xlTWFwc0F1dG9jb21wbGV0ZURpcmVjdGl2ZX0gZnJvbSAnLi9kaXJlY3RpdmVzL21hdC1nb29nbGUtbWFwcy1hdXRvY29tcGxldGUuZGlyZWN0aXZlJztcbmltcG9ydCB7TWF0VmFsaWRhdGVBZGRyZXNzRGlyZWN0aXZlfSBmcm9tICcuL2RpcmVjdGl2ZXMvYWRkcmVzcy12YWxpZGF0b3IvbWF0LWFkZHJlc3MtdmFsaWRhdG9yLmRpcmVjdGl2ZSc7XG5pbXBvcnQge01hdEdvb2dsZU1hcHNBdXRvY29tcGxldGVDb21wb25lbnR9IGZyb20gJy4vY29tcG9uZW50L21hdC1nb29nbGUtbWFwcy1hdXRvY29tcGxldGUuY29tcG9uZW50Jztcbi8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTptYXgtbGluZS1sZW5ndGhcbmltcG9ydCB7TWF0U2VhcmNoR29vZ2xlTWFwc0F1dG9jb21wbGV0ZUNvbXBvbmVudH0gZnJvbSAnLi9jb21wb25lbnQvbWF0LXNlYXJjaC1nb29nbGUtbWFwcy1hdXRvY29tcGxldGUvbWF0LXNlYXJjaC1nb29nbGUtbWFwcy1hdXRvY29tcGxldGUuY29tcG9uZW50JztcblxuXG5ATmdNb2R1bGUoe1xuICBpbXBvcnRzOlxuICAgIFtcbiAgICAgIENvbW1vbk1vZHVsZSxcbiAgICAgIEZvcm1zTW9kdWxlLFxuICAgICAgUmVhY3RpdmVGb3Jtc01vZHVsZSxcbiAgICAgIEZsZXhMYXlvdXRNb2R1bGUsXG4gICAgICBNYXRJbnB1dE1vZHVsZSxcbiAgICAgIE1hdEljb25Nb2R1bGVcbiAgICBdLFxuICBleHBvcnRzOiBbXG4gICAgTWF0R29vZ2xlTWFwc0F1dG9jb21wbGV0ZUNvbXBvbmVudCxcbiAgICBNYXRHb29nbGVNYXBzQXV0b2NvbXBsZXRlRGlyZWN0aXZlLFxuICAgIE1hdFZhbGlkYXRlQWRkcmVzc0RpcmVjdGl2ZSxcbiAgICBNYXRTZWFyY2hHb29nbGVNYXBzQXV0b2NvbXBsZXRlQ29tcG9uZW50XG4gIF0sXG4gIGRlY2xhcmF0aW9uczogW1xuICAgIE1hdEdvb2dsZU1hcHNBdXRvY29tcGxldGVDb21wb25lbnQsXG4gICAgTWF0R29vZ2xlTWFwc0F1dG9jb21wbGV0ZURpcmVjdGl2ZSxcbiAgICBNYXRWYWxpZGF0ZUFkZHJlc3NEaXJlY3RpdmUsXG4gICAgTWF0U2VhcmNoR29vZ2xlTWFwc0F1dG9jb21wbGV0ZUNvbXBvbmVudFxuICBdXG59KVxuZXhwb3J0IGNsYXNzIE1hdEdvb2dsZU1hcHNBdXRvY29tcGxldGVNb2R1bGUge1xufVxuIl19